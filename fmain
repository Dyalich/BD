unit fmain;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, Forms, Controls, Graphics, Dialogs, ExtCtrls, Buttons,
  Grids, StdCtrls,edit;

type
    Characters = record
    Name: string[100];
    klass: string[100];
    OZD: integer;
    Bo: real;
  end; //record





  { TMain }

  TMain = class(TForm)
    Otkr: TOpenDialog;
    Panel1: TPanel;
    badd: TSpeedButton;
    bedit: TSpeedButton;
    bdel: TSpeedButton;
    bsohr: TSpeedButton;
    Sohr: TSaveDialog;
    SelectDirectoryDialog1: TSelectDirectoryDialog;
    SG: TStringGrid;
    ot: TSpeedButton;
    sort: TSpeedButton;
    procedure baddClick(Sender: TObject);
    procedure bdelClick(Sender: TObject);
    procedure beditClick(Sender: TObject);
    procedure bsohrClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var CloseAction: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure Panel1Click(Sender: TObject);
    procedure sortClick(Sender: TObject);
    procedure otClick(Sender: TObject);
  private

  public

  end;

var
  Main: TMain;
  adres: string; //адрес, откуда запущена программа

implementation



{$R *.lfm}

{ TMain }

procedure TMain.Panel1Click(Sender: TObject);
begin

end;

procedure TMain.sortClick(Sender: TObject);
begin
  if SG.RowCount = 1 then exit;
  SG.SortColRow(true, 0);
end;

procedure TMain.otClick(Sender: TObject);

Var
  MyCont: Characters;
  f: file of Characters;
Begin
  SG.Cells[0, 0]:= 'Имя героя';
  SG.Cells[1, 0]:= 'Класс';
  SG.Cells[3, 0]:= 'Цена';
  SG.Cells[2, 0]:= 'Макс.ОЗ';
  SG.ColWidths[0]:= 365;
  SG.ColWidths[1]:= 195;
  SG.ColWidths[2]:= 195;
  SG.ColWidths[3]:= 194;
  SG.rowcount:=1;
   if Otkr.Execute then
   try
      AssignFile(f,Otkr.FileName);
      Reset(f);
      while not Eof(f) do begin
      Read(f, MyCont);
      SG.RowCount:= SG.RowCount + 1;
      SG.Cells[0, SG.RowCount-1]:= MyCont.Name;
      SG.Cells[1, SG.RowCount-1]:= MyCont.Klass;
      SG.Cells[2, SG.RowCount-1]:= inttostr (MyCont.OZD);
      SG.Cells[3, SG.RowCount-1]:= floattostr(MyCont.BO);
        end;
    finally
      CloseFile(f);
      end;
end;



procedure TMain.bdelClick(Sender: TObject);
begin

  //если данных нет - выходим:
  if SG.RowCount = 1 then exit;
  //иначе выводим запрос на подтверждение:
  if MessageDlg('Требуется подтверждение',
                'Вы действительно хотите удалить персонажа "' +
                SG.Cells[0, SG.Row] + '"?',
      mtConfirmation, [mbYes, mbNo, mbIgnore], 0) = mrYes then
         SG.DeleteRow(SG.Row);
  if MessageDlg('Требуется подтверждение',
                'Вы действительно хотите удалить персонажа"' +
                SG.Cells[0, SG.Row] + '"?',
      mtConfirmation, [mbYes, mbNo, mbIgnore], 0) = mrYes then
         SG.DeleteRow(SG.Row);



end;

procedure TMain.beditClick(Sender: TObject);
begin
  //если данных в сетке нет - просто выходим:
  if SG.RowCount = 1 then exit;
  //иначе записываем данные в форму редактора:
  fEdit.eName.Text:= SG.Cells[0, SG.Row];
  fEdit.Klass.Text:= SG.Cells[1, SG.Row];
  fEdit.OZ.Text:= SG.Cells[2, SG.Row];
  fEdit.BO.Text:= SG.Cells[3, SG.Row];
  //устанавливаем ModalResult редактора в mrNone:
  fEdit.ModalResult:= mrNone;
  //теперь выводим форму:
  fEdit.ShowModal;
  //сохраняем в сетку возможные изменения,
  //если пользователь нажал "Сохранить":
  if fEdit.ModalResult = mrOk then begin
    SG.Cells[0, SG.Row]:= fEdit.eName.Text;
    SG.Cells[1, SG.Row]:= fEdit.Klass.Text;
    SG.Cells[2, SG.Row]:= fEdit.OZ.Text;
    SG.Cells[3, SG.Row]:= fEdit.Bo.Text;
  end;
end;

procedure TMain.bsohrClick(Sender: TObject);

  
var
  MyCont: Characters; //для очередной записи
  f: file of Characters; //файл данных
  i: integer; //счетчик цикла
begin
   if Sohr.Execute = True then
  try
    AssignFile(f,Sohr.FileName);
    Rewrite(f);
    //теперь цикл - от первой до последней записи сетки:
    for i:= 1 to SG.RowCount-1 do begin
      //получаем данные текущей записи:
      MyCont.Name:= SG.Cells[0, i];
      MyCont.klass:= SG.Cells[1, i];
      MyCont.OZD:= StrToInt(SG.Cells[2, i]);
      MyCont.Bo:= strtofloat(SG.Cells[3, i]);
      //записываем их:
      Write(f, MyCont);
    end;
  finally
    CloseFile(f);
  end;
end;

procedure TMain.FormCreate(Sender: TObject);
var
  MyCont: Characters; //для очередной записи
  f: file of Characters; //файл данных
  i: integer; //счетчик цикла
begin
  //сначала получим адрес программы:
  adres:= ExtractFilePath(ParamStr(0));
  //настроим сетку:
  SG.Cells[0, 0]:= 'Имя героя';
  SG.Cells[1, 0]:= 'Класс';
  SG.Cells[3, 0]:= 'Цена';
  SG.Cells[2, 0]:= 'Макс.ОЗ';
  SG.ColWidths[0]:= 365;
  SG.ColWidths[1]:= 195;
  SG.ColWidths[2]:= 195;
  SG.ColWidths[3]:= 194;
   try
    AssignFile(f, adres + '\TFILE\Characters.dat');
    Rewrite(f);
    //теперь цикл - от первой до последней записи сетки:
    for i:= 1 to SG.RowCount-1 do begin
  //получаем данные текущей записи:
      MyCont.Name:= SG.Cells[0, i];
      MyCont.klass:= SG.Cells[1, i];
      MyCont.OZD:= StrToInt(SG.Cells[2, i]);
      MyCont.Bo:= strtofloat(SG.Cells[3, i]);
      //записываем их:
      Write(f, MyCont);
    end;
  finally
    CloseFile(f);
  end;

end;



procedure TMain.baddClick(Sender: TObject);

begin
  //очищаем поля, если там что-то есть:
  fEdit.eName.Text:= '';
  fEdit.Klass.Text:= '';
  fEdit.OZ.Text:= '';
  fEdit.BO.Text:= '';
  //устанавливаем ModalResult редактора в mrNone:
  fEdit.ModalResult:= mrNone;
  //теперь выводим форму:
  fEdit.ShowModal;
  //если пользователь ничего не ввел - выходим:
  if (fEdit.eName.Text= '') or (fEdit.Klass.Text= '') then exit;
  //если пользователь не нажал "Сохранить" - выходим:
  if fEdit.ModalResult <> mrOk then exit;
  //иначе добавляем в сетку строку, и заполняем её:
  SG.RowCount:= SG.RowCount + 1;
  SG.Cells[0, SG.RowCount-1]:= fEdit.eName.Text;
  SG.Cells[1, SG.RowCount-1]:= fEdit.Klass.Text;
  SG.Cells[2, SG.RowCount-1]:= fEdit.OZ.Text;
  SG.Cells[3, SG.RowCount-1]:= fEdit.BO.Text;

                               
